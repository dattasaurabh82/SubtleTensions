- name: Setup and Update Raspberry Pi for Bootable Serial Monitor
  hosts: raspberry_pi4
  become: 'yes'
  gather_facts: no
  
  pre_tasks:
    - name: Try pinging .local domain
      command: ping -c 1 serialmonitor.local
      register: ping_local
      ignore_errors: yes
      delegate_to: localhost
      become: no  # Add this to prevent sudo usage

    - name: Try pinging .lan domain if .local fails
      command: ping -c 1 serialmonitor.lan
      register: ping_lan
      ignore_errors: yes
      delegate_to: localhost
      become: no  # Add this to prevent sudo usage
      when: ping_local.rc != 0

    - name: Set host address based on ping results
      set_fact:
        ansible_host: "{{ 'serialmonitor.local' if ping_local.rc == 0 else 'serialmonitor.lan' }}"

    - name: Gathering Facts
      setup:
      register: host_facts

    - name: Display some gathered facts
      debug:
        msg: "OS: {{ host_facts.ansible_facts.ansible_distribution }}, Version: {{ host_facts.ansible_facts.ansible_distribution_version }}"
  
  
  vars:
    motd_content: |
      ______ _____ _____ _____ _____ __       _____ _____ _____ 
      |   __|   __| __  |     |  _  |  |     |     |     |   | |
      |__   |   __|    -|-   -|     |  |__   | | | |  |  | | | |
      |_____|_____|__|__|_____|__|__|_____|  |_|_|_|_____|_|___|
                                                          
      Welcome to Serial Monitor
      By: Saurabh Datta
      2024-2025                                             

  tasks:
    - name: Update apt cache (equivalent to apt-get update -y)
      apt:
        update_cache: 'yes'
        force_apt_get: 'yes'
    
    - name: Hide Raspberry Pi - Remove any existing logo parameters from cmdline.txt
      replace:
        path: /boot/firmware/cmdline.txt
        regexp: ' logo\.nologo( console_logo\.enabled=[01])?'
        replace: ''

    - name: Hide Raspberry Pi - Add logo parameters to cmdline.txt once
      lineinfile:
        path: /boot/firmware/cmdline.txt
        regexp: '^(.*)$'
        line: '\1 logo.nologo console_logo.enabled=0'
        backrefs: yes
        
    - name: Set custom MOTD
      copy:
        content: "{{ motd_content }}"
        dest: /etc/motd
        owner: root
        group: root
        mode: '0644'

    - name: Install required packages (incl. new ones)
      apt:
        name:
          - git
          - tmux
          - neofetch
          - vim
          - screen
          - minicom
          - lsof
          - net-tools
          - moreutils
          - curl
        state: present
        force_apt_get: 'yes'

    - name: Download and install Arduino CLI
      shell: |
        curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
        mv ./bin/arduino-cli /usr/bin/
      args:
        creates: /usr/bin/arduino-cli
    
    - name: Check if SubtleTensions repo exists
      stat:
        path: /home/{{ ansible_user }}/SubtleTensions
      register: repo_check

    - name: Clone SubtleTensions repo if not exists
      git:
        repo: https://github.com/dattasaurabh82/SubtleTensions.git
        dest: /home/{{ ansible_user }}/SubtleTensions
      when: not repo_check.stat.exists

    - name: Update SubtleTensions repo if exists
      shell: cd /home/{{ ansible_user }}/SubtleTensions && git pull
      when: repo_check.stat.exists
    
    - name: Copy serial monitor launch script to Pi
      copy:
        src: launch_serial_monitor.sh
        dest: /home/{{ ansible_user }}/launch_serial_monitor.sh
        mode: '0755'
        force: yes
  
    - name: Backup existing .bashrc
      copy:
        src: /home/{{ ansible_user }}/.bashrc
        dest: /home/{{ ansible_user }}/.bashrc.backup
        remote_src: yes
        force: no

    - name: Create new .bashrc file
      copy:
        src: /home/{{ ansible_user }}/.bashrc
        dest: /home/{{ ansible_user }}/.bashrc.new
        remote_src: yes

    - name: Update .bashrc.new to call the script
      blockinfile:
        path: /home/{{ ansible_user }}/.bashrc.new
        block: |
          # Serial Monitor Launch Script
          ~/launch_serial_monitor.sh
        marker: "# {mark} SERIAL MONITOR SCRIPT"
        create: yes

    - name: Display installation complete message
      debug:
        msg: >-
          System Configuration and Installation complete!